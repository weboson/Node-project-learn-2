// Урок №5: "Node.js #5 Модуль событий (Event Module)": https://youtu.be/RFh85sV8080?list=PLNkWIWHIRwMFtsaJ4b_wwkJDHKJeuAkP0
// импортируем глобальный объект, модуль событий 'events' (files system) - для взаимодействия с файловой системой

// !не верный способ
// const EventEmitter = require('events');
// подключения (импорт) модуля, который будет вызывать наше событие

// const log = require('./log')

// !не верный способ, так как экземпляр "emitter" объявленный  однажды, будет совершенно другой с тем, который будет объявлен снова 
// const emitter = new EventEmitter();


//СОЗДАНИЕ СОБЫТИЯ + ПРОСЛУШИВАНИЕ
// Далее создадим событие и повесим на него слушаетель (слежение):
// emitter.on('nameEmitter', (args) => {
//     //методом диструктиризации получим данные
//     const {id, text} = args;
//     console.log(`Данный текст мы получили из вызова события (.emit): ${id} и ${text}`);
// });


// ВЫЗОВ СОБЫТИЯ 
// вызов созданного события под именем "nameEmitter" 
//emitter.emit('имяСобытия', любые данные)
// напимер текст:
// emitter.emit('nameEmitter', 'text');
// например объект, с последующе диструктуризации (нативный JS)

// вызов разместил в другом файле (log.js), чтобы увидеть реальный пример использование события
// emitter.emit('nameEmitter', {
//     id: 1, 
//     text: 'Текст с вызова событий №2'
// });

//Важно: ДОЛЖЕН БЫТЬ ИМЕННО ТАКОЙ ПОРЯДОК: создание-прослушивание события, а потом уже вызов этого события





//? верный способ: наследовать совим классом от EventEmitter
// импортируем класс Logger
const Logger = require('./log');
// создаем от него объект logger
const logger = new Logger();

// и потом присваиваем этому объекту (logger) событие + прослушиваем
logger.on('nameEmitter', (args) => {
    const {id, text} = args;
    console.log(`Данный текст мы получили из вызова события (.emit): ${id} и ${text}`); 
    // вывел: Данный текст мы получили из вызова события (.emit): 1 и Текст с вызова событий №2
})

// вызовем метод класса, а он всою очередь (в файле log.js) вызовет событие
logger.log('Текст для импортируемой функции из файла log.js');
// ИТОГО: вывелось в конслоли: 
// Текст для импортируемой функции из файла log.js
// Данный текст мы получили из вызова события (.emit): 1 и Текст с вызова событий №2 